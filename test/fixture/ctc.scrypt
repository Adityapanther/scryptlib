
struct St1 {
  int[CLib.A] x;
}

type St1Array = St1[CLib.N];

library CLib {
  static const int M = 3;
  static const int N = 2;
  static const int A = 3;
}

contract CTC3 {

    constructor(St1 st1, St1Array a, St1Array[CLib.M] b,  int[CLib.M] c){

    }

  public function unlock(St1 st1, St1Array a, St1Array[CLib.M] b,  int[CLib.M] c) {
    auto aaa = 1;
    require([1,2,3] == st1.x);

    require([{[1,2,3]}, {[2,2,1]}] == a);
  }
}
